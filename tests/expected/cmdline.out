\set VERBOSITY terse
\pset format unaligned
-- predictability
SET synchronous_commit = on;
SELECT slot_create();
slot_create
init
(1 row)
-- Unknown option
SELECT data FROM slot_get('nosuchopt', '42');
ERROR:  option "nosuchopt" = "42" is unknown
-- Bad include
SELECT data FROM slot_get('include', '');
ERROR:  invalid input syntax for type json
SELECT data FROM slot_get('include', '{');
ERROR:  invalid input syntax for type json
SELECT data FROM slot_get('include', 'null');
ERROR:  parameter "include" must be a json object, got "null"
SELECT data FROM slot_get('include', '[]');
ERROR:  parameter "include" must be a json object, got "[]"
SELECT data FROM slot_get('include', '"ciao"');
ERROR:  parameter "include" must be a json object, got ""ciao""
SELECT data FROM slot_get('include', '{}');
ERROR:  command "include" doesn't specifiy what to filter: "{}"
SELECT data FROM slot_get('include', '{"table": "a", "tables": "a"}');
ERROR:  parameter "include" can't specify both "table" and "tables": "{"table": "a", "tables": "a"}"
-- Regexp error
SELECT data FROM slot_get('include', '{"tables": "("}');
ERROR:  invalid regular expression "(": parentheses () not balanced
-- Bad exclude
SELECT data FROM slot_get('exclude', '[]');
ERROR:  parameter "exclude" must be a json object, got "[]"
SELECT data FROM slot_get('exclude', '{}');
ERROR:  command "exclude" doesn't specifiy what to filter: "{}"
SELECT data FROM slot_get('exclude', '{"table": "a", "columns": ["a"]}');
ERROR:  command "exclude" cannot specify columns, in "{"table": "a", "columns": ["a"]}"
-- By default don't write in chunks
CREATE TABLE x ();
DROP TABLE x;
SELECT data FROM slot_peek('include-empty-xacts', '1', 'pretty-print', '0');
data
{"change":[]}
{"change":[]}
(2 rows)
SELECT data FROM slot_get('write-in-chunks', 't', 'include-empty-xacts', '1', 'pretty-print', '0');
data
{"change":[
]}
{"change":[
]}
(4 rows)
-- By default don't write xids
CREATE TABLE gimmexid (id integer PRIMARY KEY);
INSERT INTO gimmexid values (1);
DROP TABLE gimmexid;
SELECT max(((data::json) -> 'xid')::text::int) < txid_current()
	FROM slot_peek('include-xids', '1', 'include-empty-xacts', '1');
?column?
t
(1 row)
SELECT max(((data::json) -> 'xid')::text::int) + 10 > txid_current()
	FROM slot_peek( 'include-xids', '1', 'include-empty-xacts', '1');
?column?
t
(1 row)
SELECT data FROM slot_get('include-empty-xacts', '1')
	WHERE ((data::json) -> 'xid') IS NOT NULL;
data
(0 rows)
-- By default don't include empty transactions
CREATE TABLE emptyxact (id integer PRIMARY KEY);
INSERT INTO emptyxact values (1);
DROP TABLE emptyxact;
SELECT data FROM slot_get('pretty-print', '0');
data
{"change":[{"op":"I","schema":"public","table":"emptyxact","colnames":["id"],"coltypes":["int4"],"values":[1]}]}
(1 row)
SELECT slot_drop();
slot_drop
stop
(1 row)
